介绍
{以下是对一些新学知识的练习 一是希望记录自己的成长过程 二是希望和路过的新手一起练习 最后是希望使路过的大牛回想起一些有趣的经历}

练习一：设计一个函数，使其可以用来交换两个数的位置。

#include <stdio.h>

void int_swapf(int* x, int* y)
{
int i1 = 0;

i1 = *x;
*x = *y;
*y = i1;

}

int main()
{
int i1 = 0, i2 = 0;

printf("请输入两个需要交换的数：");

scanf("%d%d", &i1, &i2);

printf("\n交换前：A=%d B=%d\n\n",i1,i2);

int_swapf(&i1, &i2);

printf("交换后：A=%d B=%d\n", i1, i2);

return 0;
}



练习二：设计一个函数，并利用它找出从一到一百中的所有素数。

#include <stdio.h>

  int seekprimef(int n)
{
  int j = 0;
  for (j = 2; j < n; j++)
  {
	  if (n % j == 0)
      return 0;
  }
  return 1;


  }    


int main()
{
  int i1 = 0;
  int i2 = 0;


  for (i1 = 1; i1 <= 100; i1++)
    {
	  if (seekprimef(i1) == 1)
		  i2++;
		  printf("\n第%d素数：%d", i2, i1);
}



练习三：设计一个二分查找函数，用它找出一个有序整形数组中的某个数。

#include<stdio.h>

int binary_searchf (int a[],int x,int y)
{
	int lift = 0;
	int right = y - 1;
	int middle = (lift + right) / 2;

	for (; lift < right; middle = (lift + right) / 2)
	{

		if (a[middle] < x)
		{
			lift = middle;
		}
		else if (a[middle] > x)
		{
			right = middle;
		}
		else return middle;
	}
	

	return -1;
}

int main()
{
	int arr[] = { 1,2,3,4,5,6,7,8,9 };
	int i1 = 0;  //目标数
	int i2 = sizeof（arr） / sizeof（arr[0]）;

	scanf("%d", &i1);
	if (binary_searchf(arr, i1, i2) == -1)
		printf("没找到\n");
	else	printf（“目标数的下标是 %d”， binary_searchf（arr， i1， i2））;
		



	return 0;
}

	
	
	
	
	
